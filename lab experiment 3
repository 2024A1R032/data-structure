#include<stdio.h>
#define MAX 100
int stack[MAX],top1= -1,top2= MAX;
int isstack1empty(){
    return (top1== -1)? 1 : 0;
}
int isstack2empty(){
    return (top2==MAX)? 1 : 0;
}
int isstack1full(){
    return (top1 == top2-1 )? 1: 0;
}
int isstack2full(){
    return (top2 == top1+1)? 1:0;
}
void push_stack1(int data){
    if(isstack1full())
    printf("stack1 overflow !!!\n");
    else{
        stack[++top1]=data;
        printf("element added!!!\n");
    }
}
    void push_stack2(int data){
        if(isstack2full())
        printf("stack2 overflow !!!\n");
        else{
            stack[--top2]=data;
            printf("element added!!!\n");
        }
}
void pop_stack1(){
    if (isempty()) 
        printf("Stack 1 underflow!!!\n");
 else {
        int val = stack[top1];
        top1--;
        printf("%d",val);
    }
}
void pop_stack2(){
    if(isempty())
    printf("stack 2 underflow!!!\n");
    else{
        int val=stack[top2];
        top2++;
        printf("%d",val);
    }
}
void peek_stack1() {
    if (isempty()) 
        printf("Stack is empty!!!\n");
    else {
        printf("top element of stack1 is %d\n",stack[top1]);
    }
}
void peek_stack2(){
    if(isempty())
    printf("stack is empty!!!\n");
    else{
        printf("top element of stack2 is %d\n",stack[top2]);
    }
}
void show_stack1() {
    if (isempty()) {
        printf("Stack1 is empty!!!\n");
    } else {
        printf("Stack1 elements are:\n");
        for (int i = top1; i >=0; i--) {
            printf("%d\n", stack[i]);
        }
    }
}
void show_stack2() {
    if (isempty()) {
        printf("Stack2 is empty!!!\n");
    } else {
        printf("Stack2 elements are:\n");
        for (int i = top2; i <MAX; i++) {
            printf("%d\n", stack[i]);
        }
    }
}
