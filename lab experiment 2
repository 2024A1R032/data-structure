#include<stdio.h>  // lab experiment 2
#include<stdlib.h>
#include<limits.h>
#define MAX 100

int stack[MAX], top = -1;

// Function to check if the stack is empty
int isempty() {
    return (top == -1) ? 1 : 0;
}

// Function to check if the stack is full
int isfull() {
    return (top == MAX - 1) ? 1 : 0;
}

// Function to push an element onto the stack
void push() {
    if (isfull()) {
        printf("Stack overflow!!!\n");
    } else {
        int value;
        printf("Enter element: ");
        scanf("%d", &value);
        top++;
        stack[top] = value;
        printf("Element added\n");
    }
}

// Function to pop an element from the stack
int pop() {
    if (isempty()) {
        printf("Stack underflow!!!\n");
        return INT_MIN;
    } else {
        int val = stack[top];
        top--;
        return val;
    }
}

// Function to peek the top element of the stack
int peek() {
    if (isempty()) {
        printf("Stack is empty!!!\n");
        return INT_MIN;
    } else {
        return stack[top];
    }
}

// Function to display the elements of the stack
void show() {
    if (isempty()) {
        printf("Stack is empty!!!\n");
    } else {
        printf("Stack elements are:\n");
        for (int i = top; i >= 0; i--) {
            printf("%d\n", stack[i]);
        }
    }
}

int main() {
    while (1) {
        printf("1. Push\n");
        printf("2. Pop\n");
        printf("3. Peek\n");
        printf("4. Show\n");
        printf("5. Exit\n");

        int choice, val;
        printf("Enter choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                push();
                break;
            case 2:
                val = pop();
                if (val != INT_MIN)
                    printf("%d popped from the stack!\n", val);
                break;
            case 3:
                val = peek();
                if (val != INT_MIN)
                    printf("Stack top element is %d\n", val);
                break;
            case 4:
                show();
                break;
            case 5:
                exit(0);
                break;
            default:
                printf("Invalid choice!!!\n");
        }

        printf("\n");
    }

    return 0;
}
