#include<stdio.h>//10 march
#include<stdlib.h>
#define SIZE 100
typedef struct priorityqueue{
    int element;
    int priority;
} pqueue;
pqueue pq[SIZE];
int front=-1,rear=-1;
int isempty(){
    return(front==-1)? 1:0;
}
int isfull(){
    return (rear==SIZE-1)? 1:0;
}
void enqueue(int data,int priority){
    int i;
    if(isempty()){
        rear=rear+1;
        pq[rear].element=data;
        pq[rear].priority=priority;
        front=rear;
    }
    else{
        for(int i=front;i<=rear;i++){
            if(pq[i].priority < priority){
                for(int j=rear;j>=i;j--){
                    pq[j+1].element =pq[j].element;
                    pq[j+1].priority=pq[j].priority;
                }
                pq[i].element=data;
                pq[i].priority=priority;
                rear++;
                break;
            }
        }
        if(i==(rear+1)){
            rear=rear+1;
            pq[rear].element=data;
            pq[rear].priority=priority;
        }
    }
    printf("element inserted !!!!\n");
}
int dequeue(){
    int data=pq[front].element;
    if(front==rear)
    front=rear=-1;
    else
   front=front+1;
   return data;
}

int peek(){
    return pq[front].element;
}
void display(){
   printf("elements of the priority queue are:\n");
   for(int i=front;i<=rear;i++){
    printf("element : %d : priority : %d\n",pq[i].element,pq[i].priority);
   }
   }
int main(){
    while(1){
        printf("_____priority queue_____\n");
        printf("1.enqueue\n");
        printf("2.dequeue\n");
        printf("3. display\n");
        printf("5.exit\n");
        int choice,data,p;
        printf("enter choice= ");
        scanf("%d",&choice);
        switch(choice){
            case 1:
            if(isfull())
            printf("queue overflow !!!!\n");
            else{
                printf("enter element: ");
                scanf("%d",&data);
                printf("enter priority: ");
                scanf("%d",&p);
                enqueue(data,p);
            }
            break;
            case 2:
            if(isempty())
            printf("queue underflow !!!\n");
            else{
            printf("%d is dequeue from the queue\n",dequeue());
            }
            break;
            case 3:
            if(isempty())
            printf("queue is empty !!!\n");
            else
            printf("element available in the front of the queue is %d\n",peek());
            break;
            case 4:
            if(isempty())
            printf("queue is empty !!!\n");
            else
            display();
            break;
            case 5:
            exit(0);
            default:
            printf("invalid choice !!!!\n");
        }
    }
}
