#include<stdio.h>//10 experiment date:14-4-25
#include<stdlib.h>
struct Node{
    int data;
    char s[100];
    struct Node *next;
};
struct Node*top=NULL;
void push(int value){
    struct Node*temp=(struct Node*)malloc(sizeof(struct Node));
    if(temp==NULL)
    printf("stack overflow !!!\n");
    else{
        temp->data=value;
        temp->next=top;
        top=temp;
        printf("element %d push in the stack !!!\n",value);
    }
}
int pop(){
    if(top==NULL){
        printf("stack underflow!!!\n");
        return -1;
    }
    else{
        struct Node *temp=top;
        top=top->next;
        int val=temp->data;
        free(temp);
        return val;
    }
}
int peek(){
    if (top !=NULL){
        printf("stack is empty !!!\n");
        return -1;
    }
    else{
        return top->data;
    }
}
void show(){
    if (top==NULL)
    printf("stack is empty !!!\n");
    else{
        printf("stack elements are:\n");
        struct Node*temp=top;
        while(temp !=NULL){
            printf("%d\n",temp->data);
            temp=temp->next;
        }
    }
}
int main(){
    while(1){
        printf("1. push\n");
        printf("2. pop\n");
        printf("3. peek\n");
        printf("4.display\n");
        printf("5. exit\n");
        int choice,val,res;
        printf("enter choice: ");
        scanf("%d",&choice);
        switch(choice){
            case 1:
            printf("enter value");
            scanf("%d",&val);
            push(val);
            break;
            case 2:
            res=pop();
            if(res !=-1)
            printf("%d pop from the stack\n",res);
            break;
            case 3:
            res=pop();
            if(res !=-1)
            printf("%d peek from the stack\n",res);
            break;
            case 4:
            show();
            break;
            case 5:
            exit(0);
            default:
            printf("invalid choice !!!!\n");
        }
    }
}
